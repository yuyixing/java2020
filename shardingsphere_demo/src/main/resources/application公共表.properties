# shardingjdbc分片配置
spring.shardingsphere.datasource.names=db0,db1,db2
spring.shardingsphere.datasource.db0.url=jdbc:mysql://localhost:3306/user_db?serverTimezone=GMT%2B8&characterEncoding=utf-8
spring.shardingsphere.datasource.db0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.db0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.db0.username=root
spring.shardingsphere.datasource.db0.password=root
spring.shardingsphere.datasource.db1.url=jdbc:mysql://localhost:3306/edu_db_1?serverTimezone=GMT%2B8&characterEncoding=utf-8
spring.shardingsphere.datasource.db1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.db1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.db1.username=root
spring.shardingsphere.datasource.db1.password=root
spring.shardingsphere.datasource.db2.url=jdbc:mysql://localhost:3306/edu_db_2?serverTimezone=GMT%2B8&characterEncoding=utf-8
spring.shardingsphere.datasource.db2.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.db2.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.db2.username=root
spring.shardingsphere.datasource.db2.password=root
#配置公共表
spring.shardingsphere.sharding.broadcast-tables=t_udict
spring.shardingsphere.sharding.tables.t_udict.key-generator.column=dictid
spring.shardingsphere.sharding.tables.t_udict.key-generator.type=SNOWFLAKE
#配置user_db数据库里面t_user表专库专表
spring.shardingsphere.sharding.tables.t_user.actual-data-nodes=db$->{0}.t_user
#指定主键生成策略
spring.shardingsphere.sharding.tables.t_user.key-generator.column=user_id
spring.shardingsphere.sharding.tables.t_user.key-generator.type=SNOWFLAKE
#指定分片策略
spring.shardingsphere.sharding.tables.t_user.table-strategy.inline.sharding-column=user_id
spring.shardingsphere.sharding.tables.t_user.table-strategy.inline.algorithm-expression=t_user
#打开sql显示
spring.shardingsphere.props.sql.show=true
#一个实体对应多张表
spring.main.allow-bean-definition-overriding=true
